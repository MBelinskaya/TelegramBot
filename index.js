import { Telegraf, Markup } from 'telegraf';
import { message } from 'telegraf/filters';
import * as content from './src/const.js';
import  { btn_floor_1_links } from './src/content/btn_contetnt.js';
import * as dotenv from 'dotenv';
dotenv.config();
const bot = new Telegraf(process.env.BOT_TOKEN);

bot.help((ctx) => ctx.reply(content.commands))
bot.start((ctx) => ctx.replyWithHTML(`–ü—Ä–∏–≤–µ—Ç, ${ctx.message.from.first_name ? ctx.message.from.first_name : '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}!
<b>–í—ã–±–µ—Ä–∏, —á—Ç–æ –¥–µ–ª–∞–µ–º?</b>`, content.buttonContentsStart))
bot.command('reserve', async (ctx) => {
    try {
        await ctx.replyWithHTML('<b>–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏—ë–º–∫—É</b> –∫–≤–∞—Ä—Ç–∏—Ä—ã, –¥–æ–º–∞, —Ä–µ–º–æ—Ç–∞ –∏–ª–∏ —Ç–µ–ø–ª–æ–≤–∏–∑–∏–æ–Ω–Ω—ã–π –æ—Å–º–æ—Ç—Ä:', content.communicationChannels)
        } catch (e) {
            ctx.reply(content.errorMessage)
        }
    })
    
bot.on(message('text'), (ctx) => ctx.reply('–ù–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è. \nB—ã–±–µ—Ä–∏, —á—Ç–æ –¥–µ–ª–∞—Ç—å:', content.buttonContentsStart))
bot.on(message('sticker'), (ctx) => ctx.reply('üëç'))

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏
    bot.action('independ', async(ctx) => {
        try {
        await ctx.answerCbQuery() //—É–±—Ä–∞—Ç—å —á–∞—Å—ã —Å –∫–Ω–æ–ø–∫–∏
        await ctx.replyWithHTML('<b>–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª/–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é:</b>', Markup.inlineKeyboard([
            [Markup.button.callback('–ü–æ–ª', 'btn_floor')],
            [Markup.button.callback('–°—Ç–µ–Ω—ã', 'btn_walls')],
            [Markup.button.callback('–ü–æ—Ç–æ–ª–æ–∫', 'btn_ceiling')],
            [Markup.button.callback('–í–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ, –∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏—è, –æ—Ç–æ–ø–ª–µ–Ω–∏–µ', 'btn_water')],
            [Markup.button.callback('–≠–ª–µ–∫—Ç—Ä–∏–∫–∞', 'btn_electricity')],
            [Markup.button.callback('–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è', 'btn_ventilation')],
            [Markup.button.callback('–û–∫–Ω–∞, –≤–∏—Ç—Ä–∞–∂–∏ –ª–æ–¥–∂–∏–π', 'btn_window')],
            [Markup.button.callback('–î–≤–µ—Ä–∏', 'btn_door')],
            [Markup.button.callback('–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∏ –≤–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞', 'btn_air')],
            [Markup.button.callback('–¢–µ–ø–ª–æ–≤–∏–∑–∏–æ–Ω–Ω—ã–π –æ—Å–º–æ—Ç—Ä', 'btn_thermal')],
            [Markup.button.callback('üìö –ü—Ä–∞–≤–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'btn_legal')]
        ])) 
    } catch (e) {
        ctx.reply(content.errorMessage)
    }
    })
// –ó–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏–µ–º–∫—É
    bot.action('contacts', async(ctx) => {
        try {
        await ctx.answerCbQuery() //—É–±—Ä–∞—Ç—å —á–∞—Å—ã —Å –∫–Ω–æ–ø–∫–∏
        await ctx.replyWithHTML('<b>–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏:</b>', content.communicationChannels)
    } catch (e) {
        ctx.reply(content.errorMessage)
    }
    })
// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–¥–µ–ª–∞ –ø–æ–ª
    bot.action('btn_floor', async(ctx) => {
        try {
        await ctx.answerCbQuery() 
        await ctx.replyWithHTML('<b>–í—ã–±–µ—Ä–∏, —á—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º:</b>', Markup.inlineKeyboard([
        [Markup.button.callback('–°—Ç—è–∂–∫–∞ –ø–æ–ª–∞ (–æ—Ç–¥–µ–ª–∫–∞ –ø–æ–¥ —á–∏—Å—Ç–æ–≤—É—é)', 'btn_floor_1')],
        [Markup.button.callback('–õ–∞–º–∏–Ω–∞—Ç (—á–∏—Å—Ç–æ–≤–∞—è –æ—Ç–¥–µ–ª–∫–∞)', 'btn_floor_2')],
        [Markup.button.callback('–ö–µ—Ä–∞–º–∏—á–µ—Å–∫–∞—è –ø–ª–∏—Ç–∫–∞', 'btn_floor_3')],
        [Markup.button.callback('‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è', 'independ')]
    ])) 
    } catch (e) {
        ctx.reply(content.errorMessage)
    }
})

const getActionBot = (name, src, content1) => {
    bot.action(name, async(ctx) => {
        try {
        await ctx.answerCbQuery() //—É–±—Ä–∞—Ç—å —á–∞—Å—ã —Å –∫–Ω–æ–ø–∫–∏
        if (src !== false) {
            await ctx.replyWithPhoto({source: src})
        }
        await ctx.replyWithHTML(content1, { disable_web_page_preview: true }) // –Ω–µ –±—É–¥–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–µ–≤—å—é —Å—Å—ã–ª–∫–∏
    } catch (e) {
        ctx.reply(content.errorMessage)
    }
    })
};

const getContentBtn = (name, mediaContent, back) => {
	bot.action(name, async(ctx) => {
    try {
    await ctx.answerCbQuery(); 
    await ctx.replyWithMediaGroup(mediaContent)
    await ctx.replyWithHTML('<b>–í—ã–±–µ—Ä–∏, —á—Ç–æ –¥–µ–ª–∞–µ–º:</b>', back)
} catch (e) {
    ctx.reply(content.errorMessage)
}})
};


getActionBot('independ', false, content.communicationChannels)
getActionBot('contacts', false, content.communicationChannels)
getActionBot('phone',false, content.phoneNumber)
getActionBot('messenger',false, content.WatsApp)
getActionBot('btn_floor', false, content.btn_floor_1)
getContentBtn('btn_floor_1', btn_floor_1_links, content.backFloor)

bot.launch()

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))
